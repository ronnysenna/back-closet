// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id          Int               @id @default(autoincrement())
  name        String
  slug        String            @unique
  description String?
  createdAt   DateTime          @default(now()) @map("created_at")
  products    ProductCategory[]

  @@map("categories")
}

model Product {
  id                 Int      @id @default(autoincrement())
  name               String
  slug               String   @unique
  price              Decimal  @db.Decimal(10, 2)
  originalPrice      Decimal? @map("original_price") @db.Decimal(10, 2)
  description        String?  @db.Text
  shortDescription   String?  @map("short_description") @db.Text
  mainImage          String   @map("main_image")
  discountPercentage Int      @default(0) @map("discount_percentage")
  featured           Boolean  @default(false)
  stockQuantity      Int      @default(0) @map("stock_quantity")
  sku                String?
  rating             Decimal  @default(5.0) @db.Decimal(3, 1)
  sizes              Json?
  colors             Json?
  createdAt          DateTime @default(now()) @map("created_at")
  updatedAt          DateTime @updatedAt @map("updated_at")

  categories ProductCategory[]
  images     ProductImage[]

  @@map("products")
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  productId Int     @map("product_id")
  url       String
  alt       String?
  order     Int     @default(0)

  product Product @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_images")
}

model ProductCategory {
  productId  Int @map("product_id")
  categoryId Int @map("category_id")

  product  Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@id([productId, categoryId])
  @@map("product_categories")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}
